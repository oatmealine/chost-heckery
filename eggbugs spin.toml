version = 1
title = 'eggbugs spin'

[[modules]]
plugin = 'source.svelte'
data.contents = '''
<script>
  import Eggbug from './Eggbug.svelte';
  import grad from './grad';
  
  function entries(i) {
    return Array(i).fill(0).map((v,i) => i);
  }

  function off(ang, pow) {
    return `transform:translate(${Math.cos(ang/360*Math.PI*2) * pow}px,${Math.sin(ang/360*Math.PI*2) * pow}px)`;
  }
</script>

<style>
  .eggbug-container {
    position: relative;
    width: 96px;
    height: 96px;
  }
  .eggbug, .eggbugs {
    position: absolute;
  }
  .outer {
    display: flex;
    width: 100%;
    height: 300px;
    align-items: center;
    justify-content: center;
  }
  .spin {
    animation: 10s spin infinite linear;
  }
  .unspin {
    animation: 10s spin infinite linear;
    animation-direction: reverse;
  }
  .scale {
    width: 96px;
    height: 96px;
  }
  .spin-step {
    animation: 10s spin infinite linear;
    animation-timing-function: steps(16);
  }
  .unspin-step {
    animation: 10s spin infinite linear;
    animation-timing-function: steps(16);
    animation-direction: reverse;
    animation-delay: 0.625s;
  }
  .fade {
    width: 96px;
    height: 96px;
    position: absolute;
    z-index: 1;
  }
  .fade-grad {
    height: 96px;
    width: 2048px;
    background-size: 2048px 96px;
    animation: 0.625s spin infinite linear;
    transform: translateX(-1952px);
  }
  .faded {
    position: absolute;
    z-index: 0;
  }
  .pulse {
    animation: 2.5s spin infinite linear;
    transform: scale(1.3, 1.3);
    animation-direction: alternate-reverse;
    animation-timing-function: ease-in-out;
  }
  .fade-parent {
    overflow: hidden;
  }
</style>

<div class="outer">
  <div class="eggbug-container">
    <div class="scale spin-step eggbugs">
      {#each entries(6) as i}
      <div class="eggbug">
        <div style="{off(i/6*360, 120)}">
          <div class="scale unspin-step fade-parent">
            <div class="faded scale"><Eggbug color={i + 1}/></div>
            <div class="fade"><div class="fade-grad" style="background-image: url('{grad}')"></div></div>
          </div>
        </div>
      </div>
      {/each}
    </div>
    <div class="scale spin eggbugs">
      <div class="eggbug unspin"><div class="pulse"><Eggbug color={0}/></div></div>
      {#each entries(6) as i}
      <div class="eggbug">
        <div style="{off(i/6*360, 120)}">
          <div class="unspin">
            <Eggbug color={i + 1}/>
          </div>
        </div>
      </div>
      {/each}
    </div>
  </div>
</div>'''
sends = [2]

[[modules]]
plugin = 'source.svelte-component'
data.name = 'Eggbug'
data.contents = '''
<script>
  const eggbugs = [
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466685623894127/eggbug-gray.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466685925892196/eggbug-red.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466684524998656/eggbug-orange.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466684214616206/eggbug-yellow.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466683908423820/eggbug-green.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466684843753594/eggbug-blue.png',
    'https://cdn.discordapp.com/attachments/961685563583373362/1041466685242220584/eggbug-etal.png'
  ];

  export let color;
</script>

<style>
  img {
    margin: 0;
    height: 96px;
    width: 96px;
  }
</style>

<img src="{eggbugs[color]}" width="96" height="96">'''
namedSends = { '0' = ['Eggbug'] }

[[modules]]
plugin = 'transform.style-inliner'
data.mode = 'attr'
sends = ['output']

[[modules]]
plugin = 'source.text'
data.contents = '''
<svg width="96" height="96" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="g">
      <stop offset="0%" stop-color="rgba(255,255,255,1)" />
      <stop offset="100%" stop-color="rgba(255,255,255,0)" />
    </linearGradient>
  </defs>
  <rect x="0" y="0" width="96" height="96" style="fill:url(#g)"/>
</svg>'''
data.language = 'html'
sends = [4]

[[modules]]
plugin = 'transform.svgo'
data = { }
sends = [5]

[[modules]]
plugin = 'transform.to-data-url'
data.mime = 'image/svg+xml'
namedSends = { '0' = ['grad'] }

[[modules]]
plugin = 'source.text'
data.contents = ''
data.language = 'text'
